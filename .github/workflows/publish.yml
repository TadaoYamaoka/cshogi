name: Build and publish
on:
  release:
    types: [published]
jobs:
  deploy-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-major-version: [3]
        python-minor-version: [10, 11, 12, 13]
    env:
      python-version: ${{ format('{0}.{1}', matrix.python-major-version, matrix.python-minor-version) }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}
      - name: Install setuptools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine Cython
      - name: Install Numpy 1.19.5
        if: ${{ matrix.python-minor-version < 10 }}
        run: pip install numpy==1.19.5
      - name: Install Numpy 1.21.5
        if: ${{ matrix.python-minor-version == 10 }}
        run: pip install numpy==1.21.5
      - name: Install Numpy
        if: ${{ matrix.python-minor-version > 10 }}
        run: pip install numpy
      - name: Build 3_10
        if: ${{ matrix.python-minor-version == 10 }}
        run: python setup.py sdist bdist_wheel
      - name: Build
        if: ${{ matrix.python-minor-version != 10 }}
        run: python setup.py bdist_wheel
      - name: Publish
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*
  deploy-manylinux_2_24:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["cp310-cp310"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Build
        run: |
          export PYTHON_BIN="/opt/python/${{ matrix.python-version }}/bin"
          docker run --rm -v $(pwd):/work \
            -w /work quay.io/pypa/manylinux_2_24_x86_64 \
            /bin/sh -c "\
              $PYTHON_BIN/pip install numpy 'Cython<3.1' && \
              $PYTHON_BIN/python setup.py bdist_wheel && \
              cd dist && auditwheel repair *.whl"
      - name: Publish
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/wheelhouse/*
  deploy-manylinux_2_28:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["cp311-cp311", "cp312-cp312", "cp313-cp313"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Build
        run: |
          export PYTHON_BIN="/opt/python/${{ matrix.python-version }}/bin"
          docker run --rm -v $(pwd):/work \
            -w /work quay.io/pypa/manylinux_2_28_x86_64 \
            /bin/sh -c "\
              $PYTHON_BIN/pip install setuptools numpy 'Cython<3.1' && \
              $PYTHON_BIN/python setup.py bdist_wheel && \
              cd dist && auditwheel repair *.whl"
      - name: Publish
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/wheelhouse/*
